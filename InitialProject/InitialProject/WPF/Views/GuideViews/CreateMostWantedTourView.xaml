<UserControl x:Class="InitialProject.WPF.Views.CreateMostWantedTourView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InitialProject.WPF.Views"
        xmlns:viewModel="clr-namespace:InitialProject.WPF.ViewModels"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:cnv="clr-namespace:InitialProject.Converters"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Height="600" Width="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Styles/GuideDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <cnv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Background="{DynamicResource BackgroundColor}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="38*"/>
                <RowDefinition Height="7*"/>
            </Grid.RowDefinitions>

            <TabControl Style="{DynamicResource TabControlStyle}" Grid.Row="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding TabControlSelectionChangedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TabControl.Resources>
                    <Style TargetType="TabPanel">
                        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TabControl.Resources>

                <TabItem Style="{DynamicResource TabItemStyle1}" Header="General" IsSelected="{Binding Path=IsGeneralTabSelected,UpdateSourceTrigger=PropertyChanged}">
                    <Grid Margin="30,5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="39*"/>
                            <ColumnDefinition Width="95*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Content="Name: " VerticalAlignment="Center" Style="{DynamicResource ReviewLabel}"/>
                        <Label Grid.Row="1" Content="Country: " VerticalAlignment="Center" Style="{DynamicResource ReviewLabel}"/>
                        <Label Grid.Row="2" Content="City: " VerticalAlignment="Center" Style="{DynamicResource ReviewLabel}"/>
                        <Label Grid.Row="3" Content="Language: " VerticalAlignment="Center" Style="{DynamicResource ReviewLabel}"/>
                        <Label Grid.Row="4" Content="Description: " VerticalAlignment="Top" Style="{DynamicResource ReviewLabel}"/>
                        <Label Grid.Row="5" Content="Guest capacity: " VerticalAlignment="Center" Style="{DynamicResource ReviewLabel}"/>
                        <Label Grid.Row="6" Content="Duration (h): " VerticalAlignment="Center" Style="{DynamicResource ReviewLabel}"/>

                        <TextBox Text="{Binding Path=TourName,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle1}" Grid.Row="0" Grid.Column="1" Height="25"/>
                        <ComboBox SelectedValue="{Binding Path=SelectedCountry, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Countries}"  Grid.Row="1" Grid.Column="1" Height="25" Style="{DynamicResource ComboBoxStyle1}" ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle1}" IsEnabled="{Binding Path=IsCountryCBEnabled, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ComboBox_SelectionChanged"/>
                        <ComboBox SelectedValue="{Binding Path=SelectedCity,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=Cities, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="1" Height="25" Style="{DynamicResource ComboBoxStyle1}" ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle1}" IsEnabled="{Binding Path=IsCityCBEnabled,UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ComboBox_SelectionChanged"/>
                        <ComboBox SelectedValue="{Binding Path=SelectedLanguage,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Languages}" Grid.Row="3" Grid.Column="1" Height="25" Style="{DynamicResource ComboBoxStyle1}" ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle1}" IsEnabled="{Binding Path=IsLanguageCBEnabled,UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ComboBox_SelectionChanged"/>
                        <TextBox Text="{Binding Path=Description,UpdateSourceTrigger=PropertyChanged}" Grid.Row="4" Grid.Column="1" Margin="0,5" Style="{DynamicResource TextBoxStyle1}" TextWrapping="Wrap"/>
                        <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <TextBox Text="{Binding Path=MaxGuests,UpdateSourceTrigger=PropertyChanged}" Height="25" Width="40" Style="{DynamicResource TextBoxStyle1}">
                                <Validation.ErrorTemplate>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <Border BorderBrush="Red" BorderThickness="1" Width="42" HorizontalAlignment="Left">
                                                <AdornedElementPlaceholder/>
                                            </Border>
                                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Validation.ErrorTemplate>
                            </TextBox>
                            <Slider Value="{Binding Path=MaxGuests, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SliderStyle1}" VerticalAlignment="Center" Width="335" Margin="10,0,0,0" Maximum="1000" Minimum="1"/>
                        </StackPanel>
                        <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <TextBox Text="{Binding Path=Duration,UpdateSourceTrigger=PropertyChanged}" Height="25" Width="40" Style="{DynamicResource TextBoxStyle1}">
                                <Validation.ErrorTemplate>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <Border BorderBrush="Red" BorderThickness="1" Width="42" HorizontalAlignment="Left">
                                                <AdornedElementPlaceholder/>
                                            </Border>
                                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Validation.ErrorTemplate>
                            </TextBox>
                            <Slider Value="{Binding Path=Duration, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SliderStyle1}" VerticalAlignment="Center" Width="335" Margin="10,0,0,0" Minimum="1" Maximum="1000"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Style="{DynamicResource TabItemStyle1}" Header="Date &amp; Time" IsSelected="{Binding Path=IsDateTimeTabSelected,UpdateSourceTrigger=PropertyChanged}">
                    <Grid Margin="80,5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40*"/>
                            <RowDefinition Height="7*"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="159*"/>
                            <ColumnDefinition Width="178*"/>
                            <ColumnDefinition Width="99*"/>
                        </Grid.ColumnDefinitions>

                        <DataGrid Style="{DynamicResource DataGridStyle2}" CellStyle="{DynamicResource DataGridCellStyle1}" RowStyle="{DynamicResource DataGridRowStyle1}" Grid.Row="0" Grid.ColumnSpan="3" Margin="0,0,0,10" ItemsSource="{Binding Path=Dates, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">

                            <DataGrid.Columns>
                                <DataGridTextColumn Width="1*" Binding="{Binding StringFormat={}{0:dd.MM.yyyy HH\\:mm}}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle1}">
                                            <Setter Property="Focusable" Value="False"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Width="1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="Remove" Style="{DynamicResource DataGridButton}" Command="{Binding DataContext.RemoveDateCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                            </DataGrid.Columns>
                        </DataGrid>

                        <Label Grid.Row="1" Grid.Column="0" Content="Pick date &amp; time:" VerticalAlignment="Center" Style="{DynamicResource ReviewLabel}"/>
                        <xctk:DateTimePicker Value="{Binding Path=DatePickerSelectedDate, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Height="25" Style="{DynamicResource DateTimePickerStyle}" BorderBrush="White" Format="Custom" FormatString="dd.MM.yyyy HH.mm" Minimum="{Binding Source={x:Static sys:DateTime.Today}}"/>
                        <Button Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Content="Add" HorizontalAlignment="Right" Style="{DynamicResource BottomMenuButton}" Command="{Binding AddDateCommand}"/>
                    </Grid>
                </TabItem>
                <TabItem Style="{DynamicResource TabItemStyle1}" Header="Checkpoints" IsSelected="{Binding Path=IsCheckpointsTabSelected,UpdateSourceTrigger=PropertyChanged}">
                    <Grid Margin="80,5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40*"/>
                            <RowDefinition Height="7*"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="117*"/>
                            <ColumnDefinition Width="220*"/>
                            <ColumnDefinition Width="99*"/>
                        </Grid.ColumnDefinitions>

                        <DataGrid Style="{DynamicResource DataGridStyle2}" CellStyle="{DynamicResource DataGridCellStyle1}" RowStyle="{DynamicResource DataGridRowStyle1}" Grid.Row="0" Grid.ColumnSpan="3" Margin="0,0,0,10" ItemsSource="{Binding Path=CheckpointNames,  UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">

                            <DataGrid.Columns>
                                <DataGridTextColumn Width="1*" Binding="{Binding}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle1}">
                                            <Setter Property="Focusable" Value="False"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Width="1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="Remove" Style="{DynamicResource DataGridButton}" Command="{Binding DataContext.RemoveCheckpointCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <Label Grid.Row="1" Grid.Column="0" Content="Checkpoint:" VerticalAlignment="Center" Style="{DynamicResource ReviewLabel}"/>
                        <TextBox Text="{Binding Path=EnteredCheckpointName, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Height="25" Style="{DynamicResource TextBoxStyle1}"/>
                        <Button Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Content="Add" HorizontalAlignment="Right" Style="{DynamicResource BottomMenuButton}" Command="{Binding AddCheckpointCommand}"/>
                    </Grid>
                </TabItem>
                <TabItem Style="{DynamicResource TabItemStyle1}" Header="Images" IsSelected="{Binding Path=IsImagesTabSelected,UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel>
                        <Label Content="Cover" Style="{DynamicResource ReviewLabel}" Visibility="{Binding Path=IsCoverImageSelected, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}" HorizontalAlignment="Center"/>
                        <Grid>
                            <Button Style="{DynamicResource ImageSwitchingButtonStyle}" HorizontalAlignment="Left" Margin="35,0,0,0" Command="{Binding PreviousImageCommand}">
                                <iconPacks:PackIconMaterial Kind="ChevronLeft"/>
                            </Button>
                            <Border Height="255" Width="455" Style="{DynamicResource ImageBorder}">
                                <Image Source="{Binding SelectedImage}" Height="250" Width="450"/>
                            </Border>
                            <Button Style="{DynamicResource ImageSwitchingButtonStyle}" HorizontalAlignment="Right" Margin="0,0,35,0" Command="{Binding NextImageCommand}">
                                <iconPacks:PackIconMaterial Kind="ChevronRight"/>
                            </Button>
                        </Grid>
                        <Grid Height="43">
                            <Button Height="30" Width="130" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="73,0,0,0" Style="{DynamicResource BottomMenuButton}" Content="Add image" Command="{Binding AddImageCommand}"/>
                            <Button Height="30" Width="130" VerticalAlignment="Center" Style="{DynamicResource BottomMenuButton}" Content="Set as cover" Command="{Binding SetAsCoverCommand}"/>
                            <Button Height="30" Width="130" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,73,0" Style="{DynamicResource BottomMenuButton}" Content="Remove image" Command="{Binding RemoveImageCommand}"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
            </TabControl>

            <Border Grid.Row="1" Grid.ColumnSpan="2">
                <Grid>
                    <Button Content="Next" Style="{DynamicResource BottomMenuButton}" HorizontalAlignment="Right" Margin="0,0,10,0" Visibility="{Binding Path=IsNextButtonVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding NextCommand}"/>
                    <Button Content="Confirm" Style="{DynamicResource BottomMenuButton}" HorizontalAlignment="Right" Margin="0,0,10,0" Visibility="{Binding Path=IsConfirmButtonVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding ConfirmCommand}"/>
                    <Button Content="Previous" Style="{DynamicResource BottomMenuButton}" HorizontalAlignment="Right" Margin="0,0,90,0" Command="{Binding PreviousCommand}"/>
                    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0">
                        <CheckBox Style="{DynamicResource CheckBoxStyle1}" Content="Most wanted location" IsChecked="{Binding Path=IsMostWantedLocationChecked, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding MostWantedLocationCheckedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding MostWantedLocationUncheckedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                        <CheckBox Style="{DynamicResource CheckBoxStyle1}" Content="Most wanted language" IsChecked="{Binding Path=IsMostWantedLanguageChecked, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding MostWantedLanguageCheckedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding MostWantedLanguageUncheckedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </Border>
</UserControl>
